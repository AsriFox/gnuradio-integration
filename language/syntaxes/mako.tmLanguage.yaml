$schema: https://json.schemastore.org/tmlanguage.json
name: Mako template
scopeName: source.mako
uuid: 8580C15A-0134-4D25-9705-14F98729B2C5
fileTypes: [mako]
foldingStartMarker: (<(?i:(head|table|div|style|script|ul|ol|form|dl))\b.*?>|\{)
foldingStopMarker: (</(?i:(head|table|div|style|script|ul|ol|form|dl))>|\})
patterns:
  - comment: comments
    name: comment.line.mako
    match: (##(.*)$)
  - name: source.mako.substitution
    begin: (<%\s)
    captures:
      "1":
        name: keyword.control
    end: (%>)
    patterns:
      - include: source.python
  - name: source.mako.substitution
    begin: (<%!\s)
    captures:
      "1":
        name: keyword.control
    end: (%>)
    patterns:
      - include: source.python
  - name: source.mako.text
    begin: (<%(text)>)
    captures:
      "1":
        name: keyword.control
      "2":
        name: storage.type.function.python
    end: (</%(\2)>)
  - name: comment.block.mako
    begin: (<%(doc)>)
    captures:
      "1":
        name: keyword.control
      "2":
        name: storage.type.function.python
    end: (</%(\2)>)
  - name: source.mako.expression
    begin: (\${)
    captures:
      "1":
        name: keyword.control
      "2":
        name: keyword.control
    end: (})
    patterns:
      - include: source.python
  - name: source.doc.python.mako.controlline
    begin: ^\s*(%)(\s*((endfor)|(endif)|(endwhile)))?
    beginCaptures:
      "1":
        name: keyword.control
      "2":
        name: keyword.control
    end: $
    patterns:
      - include: source.python
  - name: source.python.mako.line
    begin: ^(#)
    beginCaptures:
      "1":
        name: keyword.control
    end: $
    patterns:
      - include: comment.block
  - name: source.mako.def
    begin: (<%(def)\S?)
    captures:
      "1":
        name: keyword.control
      "2":
        name: storage.type.function.python
    end: (</%(\2)>)
    patterns:
      - begin: (?<=<%def)
        end: (?=>)
        patterns:
          - begin: (name)\s*(=)\s*(")(?=[A-Za-z_][A-Za-z0-9_]*)
            beginCaptures:
              "1":
                name: keyword.control
              "2":
                name: keyword.operator
              "3":
                name: punctuation.section.function.begin.python
            contentName: entity.name.function.python
            end: (")
            endCaptures:
              "1":
                name: punctuation.section.function.begin.python
            patterns:
              - include: "#function_def"
              - include: "#entity_name"
          - include: "#tag-stuff"
      - begin: (>)
        captures:
          "1":
            name: keyword.control
        end: (?=</%def>)
        patterns:
          - include: $self
  - name: source.mako.call
    begin: (<%(call))
    captures:
      "1":
        name: keyword.control
      "2":
        name: storage.type.function.python
    end: (</%(\2)>)
    patterns:
      - begin: (expr)\s*(=)\s*(")
        beginCaptures:
          "1":
            name: keyword.control
          "2":
            name: keyword.operator
          "3":
            name: punctuation.section.function.begin.python
        end: (")
        endCaptures:
          "1":
            name: punctuation.section.function.begin.python
        patterns:
          - include: source.python
      - begin: (>)
        captures:
          "1":
            name: keyword.control
        end: (?=</%call>)
        patterns:
          - include: $self
  - name: source.mako.inherit
    begin: "(<%(inherit|namespace|include)) "
    beginCaptures:
      "1":
        name: keyword.control
      "2":
        name: storage.type.function.python
    end: (/>)
    endCaptures:
      "1":
        name: keyword.control
    patterns:
      - include: "#tag-stuff"
  - name: source.mako.page
    begin: (<%(page))
    beginCaptures:
      "1":
        name: keyword.control
      "2":
        name: storage.type.function.python
    end: (\/>)
    endCaptures:
      "1":
        name: keyword.control
    patterns:
      - begin: (args)\s*(=)\s*(")
        beginCaptures:
          "1":
            name: keyword.control
          "2":
            name: keyword.operator
          "3":
            name: punctuation.section.function.begin.python
        end: (")
        endCaptures:
          "1":
            name: punctuation.section.function.end.python
        patterns:
          - include: "#positional_args"
          - include: "#keyword_arguments"
      - include: "#tag-stuff"
  - name: source.mako.genericcall
    begin: (<%([a-zA-Z0-9:_]+))
    captures:
      "1":
        name: keyword.control
      "2":
        name: storage.type.function.python
    end: (</%(\2)>|\/>)
    patterns:
      - begin: (expr)\s*(=)\s*(")
        beginCaptures:
          "1":
            name: keyword.control
          "2":
            name: keyword.operator
          "3":
            name: punctuation.section.function.begin.python
        end: (")
        endCaptures:
          "1":
            name: punctuation.section.function.begin.python
        patterns:
          - include: source.python
      - begin: (>)
        captures:
          "1":
            name: keyword.control
        end: (?=</%[a-zA-Z0-9:_]+>)
        patterns:
          - include: $self
      - include: "#tag-stuff"
repository:
  builtin_exceptions:
    name: support.type.exception.python
    match: >- #regex
      (?x)
        \b(
          (
            Arithmetic|Assertion|Attribute|EOF|Environment|FloatingPoint|IO|
            Import|Indentation|Index|Key|Lookup|Memory|Name|OS|Overflow|
            NotImplemented|Reference|Runtime|Standard|Syntax|System|Tab|Type|
            UnboundLocal|Unicode(Translate|Encode|Decode)?|Value|ZeroDivision
          )Error|
          (
            Deprecation|Future|Overflow|PendingDeprecation|Runtime|Syntax|User
          )?Warning|
          KeyboardInterrupt|NotImplemented|StopIteration|SystemExit|
          (Base)?Exception
        )\b
  builtin_functions:
    name: support.function.builtin.python
    match: >- #regex
      (?x)
        \b(
          __import__|all|abs|any|apply|callable|chr|cmp|coerce|compile|delattr|
          dir|divmod|eval|execfile|filter|getattr|globals|hasattr|hash|hex|id|
          input|intern|isinstance|issubclass|iter|len|locals|map|max|min|oct|
          ord|pow|range|raw_input|reduce|reload|repr|round|setattr|sorted|sum|
          unichr|vars|zip
        )\b
  builtin_types:
    name: support.type.python
    match: >- #regex
      (?x)
        \b(
          basestring|bool|buffer|classmethod|complex|dict|enumerate|file|float|
          frozenset|int|list|long|object|open|property|reversed|set|slice|
          staticmethod|str|super|tuple|type|unicode|xrange
        )\b
  constant_placeholder:
    name: constant.other.placeholder.python
    match: (?i:%(\([a-z_]+\))?#?0?\-?[ ]?\+?([0-9]*|\*)(\.([0-9]*|\*))?[hL]?[a-z%])
  dotted_entity_name:
    begin: (?=[A-Za-z_][A-Za-z0-9_]*(\.[A-Za-z_][A-Za-z0-9_]*)*)
    end: (?<=[A-Za-z0-9_])
    patterns:
      - begin: (?=[A-Za-z_][A-Za-z0-9_]*)
        end: (?<=[A-Za-z0-9_])
        patterns:
          - include: "#entity_name"
  entities:
    patterns:
      - name: constant.character.entity.html
        match: (&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)
        captures:
          "1":
            name: punctuation.definition.entity.html
          "3":
            name: punctuation.definition.entity.html
      - name: invalid.illegal.bad-ampersand.html
        match: "&"
  entity_name:
    begin: (?=[A-Za-z_][A-Za-z0-9_]*)
    end: (?<=[A-Za-z0-9_])
    patterns:
      - include: "#magic_function_names"
      - include: "#magic_variable_names"
      - include: "#illegal_names"
      - include: "#builtin_exceptions"
      - include: "#builtin_functions"
      - include: "#builtin_types"
      - include: "#generic_name"
  escaped_char:
    name: constant.character.escape.python
    match: \\[.\n]
  function_def:
    begin: (\()
    beginCaptures:
      "1":
        name: punctuation.section.parameters.begin.python
    contentName: meta.function.parameters.python
    end: (\))\s*(?=\")
    endCaptures:
      "1":
        name: punctuation.section.parameters.end.python
    patterns:
      - include: "#keyword_arguments"
      - include: "#positional_args"
  function_name:
    begin: (?=[A-Za-z_][A-Za-z0-9_]*)
    end: (?<=[A-Za-z0-9_])
    patterns:
      - include: "#magic_function_names"
      - include: "#magic_variable_names"
      - include: "#builtin_exceptions"
      - include: "#builtin_functions"
      - include: "#builtin_types"
      - include: "#generic_name"
  generic_name:
    match: "[A-Za-z_][A-Za-z0-9_]*"
  illegal_names:
    match: >- #regex
      \b(
        and|as|assert|break|class|continue|def|del|elif|else|except|exec|
        finally|for|from|global|if|import|in|is|lambda|not|or|pass|print|raise|
        return|try|while|with|yield
      )\b
    name: invalid.illegal.name.python
  keyword_arguments:
    begin: \b([a-zA-Z_][a-zA-Z_0-9]*)\s*(=)
    beginCaptures:
      "1":
        name: variable.parameter.function.python
      "2":
        name: keyword.operator.assignment.python
    end: \s*(?:(,)|(?=$\n?|[\)"]))
    endCaptures:
      "1":
        name: punctuation.separator.parameters.python
    patterns:
      - include: $base
  line_continuation:
    match: (\\)(.*)$\n?
    captures:
      "1":
        name: punctuation.separator.continuation.line.python
      "2":
        name: invalid.illegal.unexpected-text.python
  magic_function_names:
    comment: >-
      these methods have magic interpretation by python and are generally called
      indirectly through syntactic constructs
    name: entity.name.function.magic.python
    match: >- #regex
      (?x)
        \b(
          __(?:
            abs|add|and|call|cmp|coerce|complex|contains|del|delattr|delete|
            delitem|delslice|div|divmod|enter|eq|exit|float|floordiv|ge|get|
            getattr|getattribute|getitem|getslice|gt|hash|hex|iadd|iand|idiv|
            ifloordiv|ilshift|imod|imul|init|int|invert|ior|ipow|irshift|isub|
            iter|itruediv|ixor|le|len|long|lshift|lt|mod|mul|ne|neg|new|nonzero|
            oct|or|pos|pow|radd|rand|rdiv|rdivmod|repr|rfloordiv|rlshift|rmod|
            rmul|ror|rpow|rrshift|rshift|rsub|rtruediv|rxor|set|setattr|setitem|
            setslice|str|sub|truediv|unicode|xor
          )__
        )\b
  magic_variable_names:
    comment: magic variables which a class/module may have.
    name: support.variable.magic.python
    match: >- #regex
      \b
        __(
        all|bases|class|debug|dict|doc|file|members|
        metaclass|methods|name|slots|weakref
        )__
      \b
  positional_args:
    match: \b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?:(,)|(?=[\n\)"]))
    captures:
      "1":
        name: variable.parameter.function.python
      "2":
        name: punctuation.separator.parameters.python
  source_mako_tagargs:
    name: source.mako.tagargs
    patterns:
      - begin: (name)\s*(=)\s*(")(?=[A-Za-z_][A-Za-z0-9_]*)
        beginCaptures:
          "1":
            name: keyword.control
          "2":
            name: keyword.operator
          "3":
            name: punctuation.section.function.begin.python
        contentName: entity.name.function.python
        end: (")
        endCaptures:
          "1":
            name: punctuation.section.function.begin.python
        patterns:
          - include: "#function_def"
          - include: "#entity_name"
      - include: "#tag-stuff"
  string-double-quoted:
    name: string.quoted.double.html
    begin: '"'
    beginCaptures:
      "0":
        name: punctuation.definition.string.begin.html
    end: '"'
    endCaptures:
      "0":
        name: punctuation.definition.string.end.html
    patterns:
      - include: "#embedded-code"
      - include: "#entities"
  string-single-quoted:
    name: string.quoted.single.html
    begin: "'"
    beginCaptures:
      "0":
        name: punctuation.definition.string.begin.html
    end: "'"
    endCaptures:
      "0":
        name: punctuation.definition.string.end.html
    patterns:
      - include: "#embedded-code"
      - include: "#entities"
  tag-generic-attribute:
    name: entity.other.attribute-name.html
    match: \b([a-zA-Z\-_:]+)
  tag-id-attribute:
    name: meta.attribute-with-value.id.html
    begin: \b(id)\b\s*(=)
    captures:
      "1":
        name: entity.other.attribute-name.id.html
      "2":
        name: punctuation.separator.key-value.html
    end: (?<='|")
    patterns:
      - name: string.quoted.double.html
        begin: '"'
        beginCaptures:
          "0":
            name: punctuation.definition.string.begin.html
        contentName: meta.toc-list.id.html
        end: '"'
        endCaptures:
          "0":
            name: punctuation.definition.string.end.html
        patterns:
          - include: "#embedded-code"
          - include: "#entities"
      - name: string.quoted.single.html
        begin: "'"
        beginCaptures:
          "0":
            name: punctuation.definition.string.begin.html
        contentName: meta.toc-list.id.html
        end: "'"
        endCaptures:
          "0":
            name: punctuation.definition.string.end.html
        patterns:
          - include: "#embedded-code"
          - include: "#entities"
  tag-stuff:
    patterns:
      - include: "#tag-id-attribute"
      - include: "#tag-generic-attribute"
      - include: "#string-double-quoted"
      - include: "#string-single-quoted"
